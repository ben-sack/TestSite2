


a:link{
    text-decoration: none;
    color: black;
}
a:visited{
    text-decoration: none;
    color: black;
    
    
}




.menu{
    font-family: 'Londrina Outline', cursive;
    font-size: 100px;
    vertical-align: top;
    margin: 0;
    position: absolute;
    top: 0;
    right: 0;
    padding-right: 50px;
}

.main-container{
}

@import url("https://fonts.googleapis.com/css?family=Anton|Roboto");

.word {
    font-family: 'Londrina Outline', cursive;
    perspective: 1000px;
    
}

.word span {
	cursor: pointer;
	display: inline-block;
	font-size: 100px;
	user-select: none;
	line-height: 0.8;
}

.word span:nth-child(1).active {
	animation: balance 1.5s ease-out;
	transform-origin: bottom left;
}

@keyframes balance {
	0%,
	100% {
		transform: rotate(0deg);
	}
	30%,
	60% {
		transform: rotate(-45deg);
	}
}

.word span:nth-child(2).active {
	animation: shrinkjump 1s ease-in-out;
	transform-origin: bottom center;
}

@keyframes shrinkjump {
	10%,
	35% {
		transform: scale(2, 0.2) translate(0, 0);
	}
	45%,
	50% {
		transform: scale(1) translate(0, -150px);
	}
	80% {
		transform: scale(1) translate(0, 0);
	}
}

.word span:nth-child(3).active {
	animation: falling 2s ease-out;
	transform-origin: bottom center;
}

@keyframes falling {
	12% {
		transform: rotateX(240deg);
	}
	24% {
		transform: rotateX(150deg);
	}
	36% {
		transform: rotateX(200deg);
	}
	48% {
		transform: rotateX(175deg);
	}
	60%,
	85% {
		transform: rotateX(180deg);
	}
	100% {
		transform: rotateX(0deg);
	}
}

.word span:nth-child(4).active {
	animation: rotate 1s ease-out;
}

@keyframes rotate {
	20%,
	80% {
		transform: rotateY(180deg);
	}
	100% {
		transform: rotateY(360deg);
	}
}

.word span:nth-child(5).active {
	animation: toplong 1.5s linear;
}

@keyframes toplong {
	10%,
	40% {
		transform: translateY(-48vh) scaleY(1);
	}

	90% {
		transform: translateY(-48vh) scaleY(4);
	}
}
.word span:nth-child(6).active {
	animation: falling 2s ease-out;
	transform-origin: bottom center;
}

@keyframes falling {
	12% {
		transform: rotateX(240deg);
	}
	24% {
		transform: rotateX(150deg);
	}
	36% {
		transform: rotateX(200deg);
	}
	48% {
		transform: rotateX(175deg);
	}
	60%,
	85% {
		transform: rotateX(180deg);
	}
	100% {
		transform: rotateX(0deg);
	}
}
.word span:nth-child(7).active {
	animation: rotate 1s ease-out;
}

@keyframes rotate {
	20%,
	80% {
		transform: rotateY(180deg);
	}

	100% {
		transform: rotateY(360deg);
	}
}

@keyframes balance {
	0%,
	100% {
		transform: rotate(0deg);
	}

	30%,
	60% {
		transform: rotate(-45deg);
	}
}

body {
	background-color: #fed8b1;
	color: black;
	display: flex;
	font-family: "Roboto", sans-serif;
	justify-content: center;
	align-items: center;
	flex-direction: row;
	height: 100vh;
    margin: 0;
}


.fixed {
	position: fixed;
	top: 40px;
	left: 50%;
	transform: translateX(-50%);
}



#hide-me {
    -webkit-animation: cssAnimation 8s forwards; 
    animation: cssAnimation 7s forwards;
}
@keyframes cssAnimation {
    0%   {opacity: 1;}
    90%  {opacity: 1;}
    100% {opacity: 0;}
}
@-webkit-keyframes cssAnimation {
    0%   {opacity: 1;}
    90%  {opacity: 1;}
    100% {opacity: 0;}
}

#show-me {
    animation: cssAnimation 0s 5s forwards;
    visibility: hidden;
  }
  
@keyframes cssAnimation {
    to   { visibility: visible; }
}

@import "compass/css3";

$particles: 62; // has to match nodes in dom
$particleSize: 8px;
$radius: 80;
$lapDuration: 3s;


.wrapper {
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 2;

 @include perspective(500px);
}

i {
  display: block;
  position: absolute;
  width: $particleSize;
  height: $particleSize;
  border-radius: $particleSize;
  opacity: 0;
  background: rgba(255, 255, 255, 0.5);
  box-shadow: 0px 0px 10px rgba(255, 255, 255, 1);

  animation-name: spin;
  animation-duration: $lapDuration;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
}

@for $i from 1 through $particles {
  i:nth-child(#{$i}) {
    $angle: ($i / $particles) * 720;

    @include transform(rotate(#{$angle}deg) translate3d(#{$radius}px, 0, 0));

    animation-delay: $i * ($lapDuration / $particles);
  }
}

@keyframes spin {
  from {
    opacity: 0;
  }
  to {
    opacity: 0.6;
    transform: translate3d(-$particleSize/2, -$particleSize/2, 570px);
  }
}

// background color controls
#black {
  position: absolute;
  left: 10px;
  bottom: 10px;
  color: rgba(255, 255, 255, 0.6);
  text-decoration: none;

  &:after {
    content: "Black & white";
  }
}

#black:target {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
  background: #111;
  cursor: default;

  &:after {
    content: "";
  }
}
